apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: ANYNAMESPACE
spec:
  replicas: 3
  image:
    application: FULL_PATH_REGISTRY/cp-zookeeper:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  storageClass:
    name: PRODUCTION_STORAGE_CLASS
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: ANYNAMESPACE
spec:
  replicas: 3
  image:
    application: FULL_PATH_REGISTRY/cp-server:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  storageClass:
    name: PRODUCTION_STORAGE_CLASS
  dataVolumeCapacity: 500Gi
  tls:
    autoGeneratedCerts: true
  listeners:
    internal:
      # The `internal` listener will be TLS enabled.
      tls:
        enabled: true
        # Since no secretRef is specified, the Kafka auto-generated tls 
        # configuration specified above will be used for this listener.
    external:
      tls:
        enabled: true
      externalAccess:
        type: loadBalancer
        loadBalancer:
          domain: DNSNAME 
          annotations: 
            cloud.google.com/load-balancer-type: "Internal"
  metricReporter:
    enabled: true
    bootstrapEndpoint: kafka:9071
    tls:
      enabled: true
  dependencies:
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2182
      tls:
        enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Connect
metadata:
  name: connect
  namespace: ANYNAMESPACE
spec:
  replicas: 2
  image:
    application: FULL_PATH_REGISTRY/cp-server-connect:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: DNSNAME 
      annotations: 
        cloud.google.com/load-balancer-type: "Internal"
---
apiVersion: platform.confluent.io/v1beta1
kind: KsqlDB
metadata:
  name: ksqldb
  namespace: ANYNAMESPACE
spec:
  replicas: 2
  image:
    application: FULL_PATH_REGISTRY/cp-ksqldb-server:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  storageClass:
    name: PRODUCTION_STORAGE_CLASS
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: DNSNAME 
      annotations: 
        cloud.google.com/load-balancer-type: "Internal"
---
apiVersion: platform.confluent.io/v1beta1
kind: SchemaRegistry
metadata:
  name: schemaregistry
  namespace: ANYNAMESPACE
spec:
  replicas: 1
  image:
    application: FULL_PATH_REGISTRY/cp-schema-registry:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: DNSNAME 
      annotations: 
        cloud.google.com/load-balancer-type: "Internal"
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter
  namespace: ANYNAMESPACE
spec:
  replicas: 1
  image:
    application: FULL_PATH_REGISTRY/cp-enterprise-control-center:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  storageClass:
    name: PRODUCTION_STORAGE_CLASS
  dataVolumeCapacity: 10Gi
  tls:
    autoGeneratedCerts: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka.confluent.svc.cluster.local:9071
      tls:
        enabled: true
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
    ksqldb:
    - name: ksql
      url: https://ksqldb.confluent.svc.cluster.local:8088
      tls:
        enabled: true
    connect:
    - name: connect-dev
      url:  https://connect.confluent.svc.cluster.local:8083
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: DNSNAME 
      annotations: 
        cloud.google.com/load-balancer-type: "Internal"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestProxy
metadata:
  name: kafkarestproxy
  namespace: ANYNAMESPACE
spec:
  replicas: 1
  image:
    application: FULL_PATH_REGISTRY/cp-kafka-rest:7.5.0
    init: FULL_PATH_REGISTRY/confluent-init-container:2.7.0
  tls:
    autoGeneratedCerts: true
  dependencies:
    schemaRegistry:
      url: https://schemaregistry.confluent.svc.cluster.local:8081
      tls:
        enabled: true
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: DNSNAME 
      annotations: 
        cloud.google.com/load-balancer-type: "Internal"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: default
  namespace: ANYNAMESPACE
spec:
  kafkaClusterRef:
    name: kafka
    namespace: ANYNAMESPACE
